# Build the container
gcloud builds submit --tag=gcr.io/<projectid>/latency

###############################################################
####                      Cloud Run                       #####
###############################################################
# Create the service account for the Ping service
gcloud iam service-accounts create ping-sa

# Deploy the Ping service with its service account
gcloud run deploy latency-ping \
  --service-account=ping-sa@<projectid>.iam.gserviceaccount.com \
  --image=gcr.io/<projectid>/latency \
  --allow-unauthenticated --region=us-central1 --platform=managed

# Deploy the Pong secured services
gcloud run deploy latency-pong-sec \
  --image=gcr.io/<projectid>/latency \
  --region=us-central1 --platform=managed

# Authorize only Ping SA to invoke Pong secured service
gcloud run services add-iam-policy-binding latency-pong-sec \
  --member=serviceAccount:ping-sa@<projectid>.iam.gserviceaccount.com \
  --role=roles/run.invoker --region=us-central1 --platform=managed

# Deploy the Pong unsecured services (allow allUsers)
gcloud run deploy latency-pong-unsec \
  --image=gcr.io/<projectid>/latency \
  --allow-unauthenticated --region=us-central1 --platform=managed


# Invoke Ping with Pong secured URL.
# The Google HTTP client is used to manage the security
curl "https://latency-ping-<projectHash>-uc.a.run.app/ping?\
url=https://latency-pong-sec-<projectHash>-uc.a.run.app/pong\
&useGoogleClient=true&nbcall=10"

# Invoke Ping with Pong unsecured URL
curl "https://latency-ping-<projectHash>-uc.a.run.app/ping?\
url=https://latency-pong-unsec-<projectHash>-uc.a.run.app/pong\
&useGoogleClient=false&nbcall=10"

###############################################################
####                         GKE                          #####
###############################################################

# Create the GKE autopilot cluster
gcloud container clusters create-auto latency --region=us-central1 \
  --network=projects/<projectid>/global/networks/default

# Register the cluster on Anthos Service Mesh
asmcli install \
  --project_id <projectid> \
  --cluster_name latency \
  --cluster_location us-central1 \
  --enable_all \
  --managed \
  --ca mesh_ca

# Get the cluster credential
gcloud container clusters get-credentials latency --location us-central1

# Set the sidecar auto injection
kubectl label namespace default istio-injection- \
  istio.io/rev=asm-managed --overwrite

# Deploy the yaml files
kubectl apply -f ./gke


# Get the loadbalancer IP and put it in variable
export LB_IP=$(kubectl get svc ping-service -o json | \
  jq -r ".status.loadBalancer.ingress[0].ip")

# Invoke Ping with Pong secured URL
curl "http://${LB_IP}/ping?\
url=http://pong-sec-service.default.svc.cluster.local/pong\
&useGoogleClient=false&nbcall=10"

# Invoke Ping with Pong unsecured URL
curl "http://${LB_IP}/ping?\
url=http://pong-unsec-service.default.svc.cluster.local/pong\
&useGoogleClient=false&nbcall=10"